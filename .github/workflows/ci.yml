name: CI

permissions:
  contents: read

on:
  pull_request:
  push:
    branches:
      - main
      - dev
      - staging
      - v[0-9]+.[0-9]+
  schedule:
    - cron: '0 1 * * *'
  workflow_dispatch:

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTFLAGS: -D warnings
  RUSTDOCFLAGS: -D warnings
  RUSTUP_MAX_RETRIES: 10

defaults:
  run:
    shell: bash

jobs:
  check-external-types:
    uses: taiki-e/workflows/.github/workflows/check-external-types.yml@main
  deny:
    uses: taiki-e/workflows/.github/workflows/deny.yml@main
  docs:
    uses: taiki-e/workflows/.github/workflows/docs.yml@main
  msrv:
    uses: taiki-e/workflows/.github/workflows/msrv.yml@main
    with:
      event_name: ${{ github.event_name }}
  tidy:
    uses: taiki-e/workflows/.github/workflows/tidy-rust.yml@main

  test:
    strategy:
      fail-fast: false
      matrix:
        rust:
          - stable
          - beta
          - nightly
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name: Install Rust
        run: rustup toolchain add ${{ matrix.rust }} --no-self-update && rustup default ${{ matrix.rust }}
      - run: rustup toolchain add nightly --no-self-update
      - uses: taiki-e/install-action@cargo-hack
      - uses: taiki-e/install-action@cargo-minimal-versions
      - uses: dtolnay/install@cargo-expand
        if: startsWith(matrix.rust, 'nightly')
      - run: cargo test --workspace --tests
      - run: cargo test --workspace --all-features
        if: startsWith(matrix.rust, 'nightly')
      - run: cargo minimal-versions build --workspace --all-features --ignore-private

  features:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name: Install Rust
        run: rustup toolchain add nightly --no-self-update && rustup default nightly
      - uses: taiki-e/install-action@cargo-hack
      - run: cargo hack build --workspace --ignore-private --feature-powerset --depth 2 --no-dev-deps --features unstable --ignore-unknown-features

  # ALL THE PREVIOUS JOBS NEEDS TO BE ADDED TO THE `needs` SECTION OF THIS JOB!

  ci-success:
    name: ci
    if: github.event_name == 'push' && success()
    # prettier-ignore
    needs: [check-external-types, deny, docs, msrv, tidy, test, features] # tidy:needs
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Mark the job as a success
        run: exit 0
