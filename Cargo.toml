[package]
name = "auto_enums"
# NB: When modifying, also modify html_root_url in lib.rs
version = "0.5.8"
authors = ["Taiki Endo <te316e89@gmail.com>"]
edition = "2018"
license = "Apache-2.0/MIT"
description = "A library for to allow multiple return types by automatically generated enum."
repository = "https://github.com/taiki-e/auto_enums"
documentation = "https://docs.rs/auto_enums/"
readme = "README.md"
keywords = ["enum", "macros", "derive", "attribute"]
categories = ["rust-patterns"]
exclude = ["/.travis.yml", "/bors.toml"]

[workspace]
members = [
    "core",
    "derive",
    "test_suite",
    "test_suite/unstable",
]

[badges]
travis-ci = { repository = "taiki-e/auto_enums" }

[dependencies]
auto_enums_core = { version = "0.5.8", path = "core", default-features = false }
auto_enums_derive = { version = "0.5.8", path = "derive", default-features = false }

[features]
# Default features.
default = ["std"]

# Analyze return type of function and `let` binding.
type_analysis = ["auto_enums_core/type_analysis"]

# Enable to use `transpose*` methods.
transpose_methods = ["auto_enums_derive/transpose_methods"]

# Make `?` operator support more flexible, and to make iterator implementation more effective.
try_trait = ["auto_enums_core/try_trait", "auto_enums_derive/try_trait"]

# ==============================================================================
# [std|core] libraries

# Enable to use `std` library's traits.
std = ["auto_enums_derive/std"]

# Enable to use `[std|core]::fmt`'s traits other than `Debug`, `Display` and `Write`
fmt = ["auto_enums_derive/fmt"]

# ==============================================================================
# Using external libraries

# futures(v0.3+)
futures = ["auto_enums_derive/futures"]

# futures(v0.1)
futures01 = ["auto_enums_derive/futures01"]

# proc_macro, proc-macro2, quote, syn
proc_macro = ["auto_enums_derive/proc_macro"]

# rayon
rayon = ["auto_enums_derive/rayon"]

# serde
serde = ["auto_enums_derive/serde"]

# ==============================================================================
# Enable unstable features of [std|core] libraries

# Implements `ExactSizeIterator::is_empty`.
exact_size_is_empty = ["auto_enums_derive/exact_size_is_empty"]
# Implements `io::Read::read_initializer`.
read_initializer = ["auto_enums_derive/read_initializer"]

# ==============================================================================
# no-op (it is left to maintain compatibility)

# Implements `io::Read::read_vectored` and `io::Write::write_vectored`.
iovec = ["auto_enums_derive/iovec"]
